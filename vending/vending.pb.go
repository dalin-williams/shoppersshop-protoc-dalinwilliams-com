// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vending/vending.proto

/*
Package shoppersshop_vendingmachine is a generated protocol buffer package.

It is generated from these files:
	vending/vending.proto

It has these top-level messages:
	InventorySearchAllItemCategoriesResponse
	InventorySearchForItemsRequest
	InventorySearchForItemsResponse
	PayViewCartResponse
	PayAddToCartRequest
	PayUpdateOrderRequest
	PayUpdateOrderResponse
	PayReOrderItemsRequest
	PayDeleteOrderRequest
	SessionGetCurrentSessionResponse
	SessionLoginUserRequest
	SessionCreateSessionResponse
	SessionCreateUserRequest
	SessionCreateUserResponse
	SessionGetUserByUserIdRequest
	SessionUpdateUserRequest
	SessionDeleteUserRequest
	VendGetVendByIdRequest
	ApiResponse
	Category
	Inventory
	Tag
	User
	Vend
*/
package shoppersshop_vendingmachine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Order Status
type Vend_Vend_Statu int32

const (
	Vend_VEND_STATU_PLACED    Vend_Vend_Statu = 0
	Vend_VEND_STATU_APPROVED  Vend_Vend_Statu = 1
	Vend_VEND_STATU_DELIVERED Vend_Vend_Statu = 2
	Vend_VEND_STATU_CANCELLED Vend_Vend_Statu = 3
)

var Vend_Vend_Statu_name = map[int32]string{
	0: "VEND_STATU_PLACED",
	1: "VEND_STATU_APPROVED",
	2: "VEND_STATU_DELIVERED",
	3: "VEND_STATU_CANCELLED",
}
var Vend_Vend_Statu_value = map[string]int32{
	"VEND_STATU_PLACED":    0,
	"VEND_STATU_APPROVED":  1,
	"VEND_STATU_DELIVERED": 2,
	"VEND_STATU_CANCELLED": 3,
}

func (x Vend_Vend_Statu) String() string {
	return proto.EnumName(Vend_Vend_Statu_name, int32(x))
}
func (Vend_Vend_Statu) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{23, 0} }

type InventorySearchAllItemCategoriesResponse struct {
	Items []*InventorySearchAllItemCategoriesResponse_Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *InventorySearchAllItemCategoriesResponse) Reset() {
	*m = InventorySearchAllItemCategoriesResponse{}
}
func (m *InventorySearchAllItemCategoriesResponse) String() string { return proto.CompactTextString(m) }
func (*InventorySearchAllItemCategoriesResponse) ProtoMessage()    {}
func (*InventorySearchAllItemCategoriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0}
}

func (m *InventorySearchAllItemCategoriesResponse) GetItems() []*InventorySearchAllItemCategoriesResponse_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type InventorySearchAllItemCategoriesResponse_Item struct {
	Categories *Category `protobuf:"bytes,1,opt,name=categories" json:"categories,omitempty"`
	Store      string    `protobuf:"bytes,2,opt,name=store" json:"store,omitempty"`
}

func (m *InventorySearchAllItemCategoriesResponse_Item) Reset() {
	*m = InventorySearchAllItemCategoriesResponse_Item{}
}
func (m *InventorySearchAllItemCategoriesResponse_Item) String() string {
	return proto.CompactTextString(m)
}
func (*InventorySearchAllItemCategoriesResponse_Item) ProtoMessage() {}
func (*InventorySearchAllItemCategoriesResponse_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

func (m *InventorySearchAllItemCategoriesResponse_Item) GetCategories() *Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *InventorySearchAllItemCategoriesResponse_Item) GetStore() string {
	if m != nil {
		return m.Store
	}
	return ""
}

type InventorySearchForItemsRequest struct {
	// The category names - can pass many items
	Category []string `protobuf:"bytes,1,rep,name=category" json:"category,omitempty"`
	// The item names - can pass many items
	Name []string `protobuf:"bytes,2,rep,name=name" json:"name,omitempty"`
	// The category names - can pass many items
	Price int32 `protobuf:"varint,3,opt,name=price" json:"price,omitempty"`
}

func (m *InventorySearchForItemsRequest) Reset()                    { *m = InventorySearchForItemsRequest{} }
func (m *InventorySearchForItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*InventorySearchForItemsRequest) ProtoMessage()               {}
func (*InventorySearchForItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InventorySearchForItemsRequest) GetCategory() []string {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *InventorySearchForItemsRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *InventorySearchForItemsRequest) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type InventorySearchForItemsResponse struct {
	Items []*Inventory `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *InventorySearchForItemsResponse) Reset()                    { *m = InventorySearchForItemsResponse{} }
func (m *InventorySearchForItemsResponse) String() string            { return proto.CompactTextString(m) }
func (*InventorySearchForItemsResponse) ProtoMessage()               {}
func (*InventorySearchForItemsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *InventorySearchForItemsResponse) GetItems() []*Inventory {
	if m != nil {
		return m.Items
	}
	return nil
}

type PayViewCartResponse struct {
	Items []*Inventory `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *PayViewCartResponse) Reset()                    { *m = PayViewCartResponse{} }
func (m *PayViewCartResponse) String() string            { return proto.CompactTextString(m) }
func (*PayViewCartResponse) ProtoMessage()               {}
func (*PayViewCartResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PayViewCartResponse) GetItems() []*Inventory {
	if m != nil {
		return m.Items
	}
	return nil
}

type PayAddToCartRequest struct {
	// A specific item id you wish to purchase
	Id float64 `protobuf:"fixed64,1,opt,name=id" json:"id,omitempty"`
}

func (m *PayAddToCartRequest) Reset()                    { *m = PayAddToCartRequest{} }
func (m *PayAddToCartRequest) String() string            { return proto.CompactTextString(m) }
func (*PayAddToCartRequest) ProtoMessage()               {}
func (*PayAddToCartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PayAddToCartRequest) GetId() float64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PayUpdateOrderRequest struct {
	// Updated Vend Object
	Body *Vend `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	// ID of order that needs to be updated
	OrderId string `protobuf:"bytes,2,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *PayUpdateOrderRequest) Reset()                    { *m = PayUpdateOrderRequest{} }
func (m *PayUpdateOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*PayUpdateOrderRequest) ProtoMessage()               {}
func (*PayUpdateOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PayUpdateOrderRequest) GetBody() *Vend {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *PayUpdateOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type PayUpdateOrderResponse struct {
	CallBack string `protobuf:"bytes,1,opt,name=call_back,json=callBack" json:"call_back,omitempty"`
}

func (m *PayUpdateOrderResponse) Reset()                    { *m = PayUpdateOrderResponse{} }
func (m *PayUpdateOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*PayUpdateOrderResponse) ProtoMessage()               {}
func (*PayUpdateOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PayUpdateOrderResponse) GetCallBack() string {
	if m != nil {
		return m.CallBack
	}
	return ""
}

type PayReOrderItemsRequest struct {
	// ID of order to re-order
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *PayReOrderItemsRequest) Reset()                    { *m = PayReOrderItemsRequest{} }
func (m *PayReOrderItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*PayReOrderItemsRequest) ProtoMessage()               {}
func (*PayReOrderItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PayReOrderItemsRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type PayDeleteOrderRequest struct {
	// Order ID to delete
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *PayDeleteOrderRequest) Reset()                    { *m = PayDeleteOrderRequest{} }
func (m *PayDeleteOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*PayDeleteOrderRequest) ProtoMessage()               {}
func (*PayDeleteOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PayDeleteOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type SessionGetCurrentSessionResponse struct {
	// The session_id
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (m *SessionGetCurrentSessionResponse) Reset()         { *m = SessionGetCurrentSessionResponse{} }
func (m *SessionGetCurrentSessionResponse) String() string { return proto.CompactTextString(m) }
func (*SessionGetCurrentSessionResponse) ProtoMessage()    {}
func (*SessionGetCurrentSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9}
}

func (m *SessionGetCurrentSessionResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type SessionLoginUserRequest struct {
	// The password for login in clear text
	Password string `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	// The user name for login
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
}

func (m *SessionLoginUserRequest) Reset()                    { *m = SessionLoginUserRequest{} }
func (m *SessionLoginUserRequest) String() string            { return proto.CompactTextString(m) }
func (*SessionLoginUserRequest) ProtoMessage()               {}
func (*SessionLoginUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SessionLoginUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SessionLoginUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type SessionCreateSessionResponse struct {
	// The user ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *SessionCreateSessionResponse) Reset()                    { *m = SessionCreateSessionResponse{} }
func (m *SessionCreateSessionResponse) String() string            { return proto.CompactTextString(m) }
func (*SessionCreateSessionResponse) ProtoMessage()               {}
func (*SessionCreateSessionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SessionCreateSessionResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type SessionCreateUserRequest struct {
	// The created user object
	Body *User `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *SessionCreateUserRequest) Reset()                    { *m = SessionCreateUserRequest{} }
func (m *SessionCreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*SessionCreateUserRequest) ProtoMessage()               {}
func (*SessionCreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SessionCreateUserRequest) GetBody() *User {
	if m != nil {
		return m.Body
	}
	return nil
}

type SessionCreateUserResponse struct {
	// The user ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *SessionCreateUserResponse) Reset()                    { *m = SessionCreateUserResponse{} }
func (m *SessionCreateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*SessionCreateUserResponse) ProtoMessage()               {}
func (*SessionCreateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SessionCreateUserResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type SessionGetUserByUserIdRequest struct {
	// the user or session ID
	UserId string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *SessionGetUserByUserIdRequest) Reset()                    { *m = SessionGetUserByUserIdRequest{} }
func (m *SessionGetUserByUserIdRequest) String() string            { return proto.CompactTextString(m) }
func (*SessionGetUserByUserIdRequest) ProtoMessage()               {}
func (*SessionGetUserByUserIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SessionGetUserByUserIdRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type SessionUpdateUserRequest struct {
	// Updated user object
	Body *User `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	// the user or session ID
	UserId string `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
}

func (m *SessionUpdateUserRequest) Reset()                    { *m = SessionUpdateUserRequest{} }
func (m *SessionUpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*SessionUpdateUserRequest) ProtoMessage()               {}
func (*SessionUpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SessionUpdateUserRequest) GetBody() *User {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *SessionUpdateUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type SessionDeleteUserRequest struct {
	// The name that needs to be deleted
	UserId string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *SessionDeleteUserRequest) Reset()                    { *m = SessionDeleteUserRequest{} }
func (m *SessionDeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*SessionDeleteUserRequest) ProtoMessage()               {}
func (*SessionDeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SessionDeleteUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type VendGetVendByIdRequest struct {
	// The id we want to query for transactions
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *VendGetVendByIdRequest) Reset()                    { *m = VendGetVendByIdRequest{} }
func (m *VendGetVendByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*VendGetVendByIdRequest) ProtoMessage()               {}
func (*VendGetVendByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *VendGetVendByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ApiResponse struct {
	Code    int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Type    string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (m *ApiResponse) Reset()                    { *m = ApiResponse{} }
func (m *ApiResponse) String() string            { return proto.CompactTextString(m) }
func (*ApiResponse) ProtoMessage()               {}
func (*ApiResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ApiResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ApiResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ApiResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Category struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Category) Reset()                    { *m = Category{} }
func (m *Category) String() string            { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()               {}
func (*Category) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Category) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Inventory struct {
	Cost      int32    `protobuf:"varint,1,opt,name=cost" json:"cost,omitempty"`
	Id        string   `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name      string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	PhotoUrls []string `protobuf:"bytes,4,rep,name=photoUrls" json:"photoUrls,omitempty"`
	Tags      []*Tag   `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Url       string   `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
}

func (m *Inventory) Reset()                    { *m = Inventory{} }
func (m *Inventory) String() string            { return proto.CompactTextString(m) }
func (*Inventory) ProtoMessage()               {}
func (*Inventory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Inventory) GetCost() int32 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *Inventory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Inventory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Inventory) GetPhotoUrls() []string {
	if m != nil {
		return m.PhotoUrls
	}
	return nil
}

func (m *Inventory) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Inventory) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Tag struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Tag) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type User struct {
	Email     string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName" json:"firstName,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=lastName" json:"lastName,omitempty"`
	Password  string `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	Phone     string `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
	// User Status
	UserStatus int32  `protobuf:"varint,7,opt,name=userStatus" json:"userStatus,omitempty"`
	Username   string `protobuf:"bytes,8,opt,name=username" json:"username,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetUserStatus() int32 {
	if m != nil {
		return m.UserStatus
	}
	return 0
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type Vend struct {
	Id     string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Items  []*Vend_Item    `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	Status Vend_Vend_Statu `protobuf:"varint,3,opt,name=status,enum=shoppersshop_vendingmachine.Vend_Vend_Statu" json:"status,omitempty"`
	Total  int32           `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
}

func (m *Vend) Reset()                    { *m = Vend{} }
func (m *Vend) String() string            { return proto.CompactTextString(m) }
func (*Vend) ProtoMessage()               {}
func (*Vend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Vend) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Vend) GetItems() []*Vend_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Vend) GetStatus() Vend_Vend_Statu {
	if m != nil {
		return m.Status
	}
	return Vend_VEND_STATU_PLACED
}

func (m *Vend) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Vend_Item struct {
	Category *Category  `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	Item     *Inventory `protobuf:"bytes,2,opt,name=item" json:"item,omitempty"`
	// The number of item x bought
	Quantity int32 `protobuf:"varint,3,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *Vend_Item) Reset()                    { *m = Vend_Item{} }
func (m *Vend_Item) String() string            { return proto.CompactTextString(m) }
func (*Vend_Item) ProtoMessage()               {}
func (*Vend_Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23, 0} }

func (m *Vend_Item) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Vend_Item) GetItem() *Inventory {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Vend_Item) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func init() {
	proto.RegisterType((*InventorySearchAllItemCategoriesResponse)(nil), "shoppersshop_vendingmachine.InventorySearchAllItemCategoriesResponse")
	proto.RegisterType((*InventorySearchAllItemCategoriesResponse_Item)(nil), "shoppersshop_vendingmachine.InventorySearchAllItemCategoriesResponse.Item")
	proto.RegisterType((*InventorySearchForItemsRequest)(nil), "shoppersshop_vendingmachine.InventorySearchForItemsRequest")
	proto.RegisterType((*InventorySearchForItemsResponse)(nil), "shoppersshop_vendingmachine.InventorySearchForItemsResponse")
	proto.RegisterType((*PayViewCartResponse)(nil), "shoppersshop_vendingmachine.PayViewCartResponse")
	proto.RegisterType((*PayAddToCartRequest)(nil), "shoppersshop_vendingmachine.PayAddToCartRequest")
	proto.RegisterType((*PayUpdateOrderRequest)(nil), "shoppersshop_vendingmachine.PayUpdateOrderRequest")
	proto.RegisterType((*PayUpdateOrderResponse)(nil), "shoppersshop_vendingmachine.PayUpdateOrderResponse")
	proto.RegisterType((*PayReOrderItemsRequest)(nil), "shoppersshop_vendingmachine.PayReOrderItemsRequest")
	proto.RegisterType((*PayDeleteOrderRequest)(nil), "shoppersshop_vendingmachine.PayDeleteOrderRequest")
	proto.RegisterType((*SessionGetCurrentSessionResponse)(nil), "shoppersshop_vendingmachine.SessionGetCurrentSessionResponse")
	proto.RegisterType((*SessionLoginUserRequest)(nil), "shoppersshop_vendingmachine.SessionLoginUserRequest")
	proto.RegisterType((*SessionCreateSessionResponse)(nil), "shoppersshop_vendingmachine.SessionCreateSessionResponse")
	proto.RegisterType((*SessionCreateUserRequest)(nil), "shoppersshop_vendingmachine.SessionCreateUserRequest")
	proto.RegisterType((*SessionCreateUserResponse)(nil), "shoppersshop_vendingmachine.SessionCreateUserResponse")
	proto.RegisterType((*SessionGetUserByUserIdRequest)(nil), "shoppersshop_vendingmachine.SessionGetUserByUserIdRequest")
	proto.RegisterType((*SessionUpdateUserRequest)(nil), "shoppersshop_vendingmachine.SessionUpdateUserRequest")
	proto.RegisterType((*SessionDeleteUserRequest)(nil), "shoppersshop_vendingmachine.SessionDeleteUserRequest")
	proto.RegisterType((*VendGetVendByIdRequest)(nil), "shoppersshop_vendingmachine.VendGetVendByIdRequest")
	proto.RegisterType((*ApiResponse)(nil), "shoppersshop_vendingmachine.ApiResponse")
	proto.RegisterType((*Category)(nil), "shoppersshop_vendingmachine.Category")
	proto.RegisterType((*Inventory)(nil), "shoppersshop_vendingmachine.Inventory")
	proto.RegisterType((*Tag)(nil), "shoppersshop_vendingmachine.Tag")
	proto.RegisterType((*User)(nil), "shoppersshop_vendingmachine.User")
	proto.RegisterType((*Vend)(nil), "shoppersshop_vendingmachine.Vend")
	proto.RegisterType((*Vend_Item)(nil), "shoppersshop_vendingmachine.Vend.Item")
	proto.RegisterEnum("shoppersshop_vendingmachine.Vend_Vend_Statu", Vend_Vend_Statu_name, Vend_Vend_Statu_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SHOPPERSSHOP_VendingMachineService service

type SHOPPERSSHOP_VendingMachineServiceClient interface {
	// Finds Pets by status
	//
	// Get all stores once can vend the inventory by name
	InventorySearchAllItemCategories(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*InventorySearchAllItemCategoriesResponse, error)
	// Finds inventory items by query params
	//
	// Search the inventory by query params
	InventorySearchForItems(ctx context.Context, in *InventorySearchForItemsRequest, opts ...grpc.CallOption) (*InventorySearchForItemsResponse, error)
	// See all items in your virtual cart
	//
	// Shows all items in your cart
	PayViewCart(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*PayViewCartResponse, error)
	// Initilize a vending transaction
	//
	// Purchases all items in your cart
	PayPurchaseCart(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Add an item via id to your cart
	PayAddToCart(ctx context.Context, in *PayAddToCartRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Updates an old order
	//
	// Updates an old order IF it is not completed
	PayUpdateOrder(ctx context.Context, in *PayUpdateOrderRequest, opts ...grpc.CallOption) (*PayUpdateOrderResponse, error)
	// Re-order items
	//
	// Adds all items from the given order back to the cart
	PayReOrderItems(ctx context.Context, in *PayReOrderItemsRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Deletes a order IF it is not complete
	//
	// Delete an outstanding order
	PayDeleteOrder(ctx context.Context, in *PayDeleteOrderRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Get the session
	//
	// Returns the current session ID or creates one
	SessionGetCurrentSession(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*SessionGetCurrentSessionResponse, error)
	// Logs user into the system
	//
	// Logs in the current user into the vending machine
	SessionLoginUser(ctx context.Context, in *SessionLoginUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Logs out current logged in user session
	//
	// Logs out the given user
	SessionLogoutUser(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Creates a user session
	//
	// Creates a session with the given user
	SessionCreateSession(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*SessionCreateSessionResponse, error)
	// Creates a new user
	//
	// Creates a user, returns the user id
	SessionCreateUser(ctx context.Context, in *SessionCreateUserRequest, opts ...grpc.CallOption) (*SessionCreateUserResponse, error)
	// Get session or user by ID
	//
	// Gets the session/user represented by the passed UUID
	SessionGetUserByUserId(ctx context.Context, in *SessionGetUserByUserIdRequest, opts ...grpc.CallOption) (*User, error)
	// Updated user
	//
	// This can only be done by the logged in user.
	SessionUpdateUser(ctx context.Context, in *SessionUpdateUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Delete user
	//
	// Deletes current user.
	SessionDeleteUser(ctx context.Context, in *SessionDeleteUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// web-hook endpoint representing vended items by this session
	//
	// The endpoint representing all of the items you've ever purchased - thanks!
	VendGetSessionVend(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*Vend, error)
	// Web-hook and transaction query
	//
	// This endpoint gives access to transactions created by {TransactionId, UserId}
	VendGetVendById(ctx context.Context, in *VendGetVendByIdRequest, opts ...grpc.CallOption) (*Vend, error)
}

type sHOPPERSSHOP_VendingMachineServiceClient struct {
	cc *grpc.ClientConn
}

func NewSHOPPERSSHOP_VendingMachineServiceClient(cc *grpc.ClientConn) SHOPPERSSHOP_VendingMachineServiceClient {
	return &sHOPPERSSHOP_VendingMachineServiceClient{cc}
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) InventorySearchAllItemCategories(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*InventorySearchAllItemCategoriesResponse, error) {
	out := new(InventorySearchAllItemCategoriesResponse)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/InventorySearchAllItemCategories", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) InventorySearchForItems(ctx context.Context, in *InventorySearchForItemsRequest, opts ...grpc.CallOption) (*InventorySearchForItemsResponse, error) {
	out := new(InventorySearchForItemsResponse)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/InventorySearchForItems", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) PayViewCart(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*PayViewCartResponse, error) {
	out := new(PayViewCartResponse)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayViewCart", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) PayPurchaseCart(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayPurchaseCart", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) PayAddToCart(ctx context.Context, in *PayAddToCartRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayAddToCart", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) PayUpdateOrder(ctx context.Context, in *PayUpdateOrderRequest, opts ...grpc.CallOption) (*PayUpdateOrderResponse, error) {
	out := new(PayUpdateOrderResponse)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayUpdateOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) PayReOrderItems(ctx context.Context, in *PayReOrderItemsRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayReOrderItems", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) PayDeleteOrder(ctx context.Context, in *PayDeleteOrderRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayDeleteOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) SessionGetCurrentSession(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*SessionGetCurrentSessionResponse, error) {
	out := new(SessionGetCurrentSessionResponse)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionGetCurrentSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) SessionLoginUser(ctx context.Context, in *SessionLoginUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionLoginUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) SessionLogoutUser(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionLogoutUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) SessionCreateSession(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*SessionCreateSessionResponse, error) {
	out := new(SessionCreateSessionResponse)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionCreateSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) SessionCreateUser(ctx context.Context, in *SessionCreateUserRequest, opts ...grpc.CallOption) (*SessionCreateUserResponse, error) {
	out := new(SessionCreateUserResponse)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionCreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) SessionGetUserByUserId(ctx context.Context, in *SessionGetUserByUserIdRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionGetUserByUserId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) SessionUpdateUser(ctx context.Context, in *SessionUpdateUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionUpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) SessionDeleteUser(ctx context.Context, in *SessionDeleteUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionDeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) VendGetSessionVend(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*Vend, error) {
	out := new(Vend)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/VendGetSessionVend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sHOPPERSSHOP_VendingMachineServiceClient) VendGetVendById(ctx context.Context, in *VendGetVendByIdRequest, opts ...grpc.CallOption) (*Vend, error) {
	out := new(Vend)
	err := grpc.Invoke(ctx, "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/VendGetVendById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SHOPPERSSHOP_VendingMachineService service

type SHOPPERSSHOP_VendingMachineServiceServer interface {
	// Finds Pets by status
	//
	// Get all stores once can vend the inventory by name
	InventorySearchAllItemCategories(context.Context, *google_protobuf.Empty) (*InventorySearchAllItemCategoriesResponse, error)
	// Finds inventory items by query params
	//
	// Search the inventory by query params
	InventorySearchForItems(context.Context, *InventorySearchForItemsRequest) (*InventorySearchForItemsResponse, error)
	// See all items in your virtual cart
	//
	// Shows all items in your cart
	PayViewCart(context.Context, *google_protobuf.Empty) (*PayViewCartResponse, error)
	// Initilize a vending transaction
	//
	// Purchases all items in your cart
	PayPurchaseCart(context.Context, *google_protobuf.Empty) (*google_protobuf.Empty, error)
	// Add an item via id to your cart
	PayAddToCart(context.Context, *PayAddToCartRequest) (*google_protobuf.Empty, error)
	// Updates an old order
	//
	// Updates an old order IF it is not completed
	PayUpdateOrder(context.Context, *PayUpdateOrderRequest) (*PayUpdateOrderResponse, error)
	// Re-order items
	//
	// Adds all items from the given order back to the cart
	PayReOrderItems(context.Context, *PayReOrderItemsRequest) (*google_protobuf.Empty, error)
	// Deletes a order IF it is not complete
	//
	// Delete an outstanding order
	PayDeleteOrder(context.Context, *PayDeleteOrderRequest) (*google_protobuf.Empty, error)
	// Get the session
	//
	// Returns the current session ID or creates one
	SessionGetCurrentSession(context.Context, *google_protobuf.Empty) (*SessionGetCurrentSessionResponse, error)
	// Logs user into the system
	//
	// Logs in the current user into the vending machine
	SessionLoginUser(context.Context, *SessionLoginUserRequest) (*google_protobuf.Empty, error)
	// Logs out current logged in user session
	//
	// Logs out the given user
	SessionLogoutUser(context.Context, *google_protobuf.Empty) (*google_protobuf.Empty, error)
	// Creates a user session
	//
	// Creates a session with the given user
	SessionCreateSession(context.Context, *google_protobuf.Empty) (*SessionCreateSessionResponse, error)
	// Creates a new user
	//
	// Creates a user, returns the user id
	SessionCreateUser(context.Context, *SessionCreateUserRequest) (*SessionCreateUserResponse, error)
	// Get session or user by ID
	//
	// Gets the session/user represented by the passed UUID
	SessionGetUserByUserId(context.Context, *SessionGetUserByUserIdRequest) (*User, error)
	// Updated user
	//
	// This can only be done by the logged in user.
	SessionUpdateUser(context.Context, *SessionUpdateUserRequest) (*google_protobuf.Empty, error)
	// Delete user
	//
	// Deletes current user.
	SessionDeleteUser(context.Context, *SessionDeleteUserRequest) (*google_protobuf.Empty, error)
	// web-hook endpoint representing vended items by this session
	//
	// The endpoint representing all of the items you've ever purchased - thanks!
	VendGetSessionVend(context.Context, *google_protobuf.Empty) (*Vend, error)
	// Web-hook and transaction query
	//
	// This endpoint gives access to transactions created by {TransactionId, UserId}
	VendGetVendById(context.Context, *VendGetVendByIdRequest) (*Vend, error)
}

func RegisterSHOPPERSSHOP_VendingMachineServiceServer(s *grpc.Server, srv SHOPPERSSHOP_VendingMachineServiceServer) {
	s.RegisterService(&_SHOPPERSSHOP_VendingMachineService_serviceDesc, srv)
}

func _SHOPPERSSHOP_VendingMachineService_InventorySearchAllItemCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).InventorySearchAllItemCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/InventorySearchAllItemCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).InventorySearchAllItemCategories(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_InventorySearchForItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InventorySearchForItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).InventorySearchForItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/InventorySearchForItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).InventorySearchForItems(ctx, req.(*InventorySearchForItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_PayViewCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayViewCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayViewCart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayViewCart(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_PayPurchaseCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayPurchaseCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayPurchaseCart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayPurchaseCart(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_PayAddToCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayAddToCartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayAddToCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayAddToCart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayAddToCart(ctx, req.(*PayAddToCartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_PayUpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayUpdateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayUpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayUpdateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayUpdateOrder(ctx, req.(*PayUpdateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_PayReOrderItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayReOrderItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayReOrderItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayReOrderItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayReOrderItems(ctx, req.(*PayReOrderItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_PayDeleteOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayDeleteOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayDeleteOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/PayDeleteOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).PayDeleteOrder(ctx, req.(*PayDeleteOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_SessionGetCurrentSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionGetCurrentSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionGetCurrentSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionGetCurrentSession(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_SessionLoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionLoginUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionLoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionLoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionLoginUser(ctx, req.(*SessionLoginUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_SessionLogoutUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionLogoutUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionLogoutUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionLogoutUser(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_SessionCreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionCreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionCreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionCreateSession(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_SessionCreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionCreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionCreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionCreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionCreateUser(ctx, req.(*SessionCreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_SessionGetUserByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionGetUserByUserIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionGetUserByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionGetUserByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionGetUserByUserId(ctx, req.(*SessionGetUserByUserIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_SessionUpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionUpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionUpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionUpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionUpdateUser(ctx, req.(*SessionUpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_SessionDeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionDeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionDeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/SessionDeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).SessionDeleteUser(ctx, req.(*SessionDeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_VendGetSessionVend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).VendGetSessionVend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/VendGetSessionVend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).VendGetSessionVend(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SHOPPERSSHOP_VendingMachineService_VendGetVendById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VendGetVendByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).VendGetVendById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService/VendGetVendById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHOPPERSSHOP_VendingMachineServiceServer).VendGetVendById(ctx, req.(*VendGetVendByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SHOPPERSSHOP_VendingMachineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shoppersshop_vendingmachine.SHOPPERSSHOP_VendingMachineService",
	HandlerType: (*SHOPPERSSHOP_VendingMachineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InventorySearchAllItemCategories",
			Handler:    _SHOPPERSSHOP_VendingMachineService_InventorySearchAllItemCategories_Handler,
		},
		{
			MethodName: "InventorySearchForItems",
			Handler:    _SHOPPERSSHOP_VendingMachineService_InventorySearchForItems_Handler,
		},
		{
			MethodName: "PayViewCart",
			Handler:    _SHOPPERSSHOP_VendingMachineService_PayViewCart_Handler,
		},
		{
			MethodName: "PayPurchaseCart",
			Handler:    _SHOPPERSSHOP_VendingMachineService_PayPurchaseCart_Handler,
		},
		{
			MethodName: "PayAddToCart",
			Handler:    _SHOPPERSSHOP_VendingMachineService_PayAddToCart_Handler,
		},
		{
			MethodName: "PayUpdateOrder",
			Handler:    _SHOPPERSSHOP_VendingMachineService_PayUpdateOrder_Handler,
		},
		{
			MethodName: "PayReOrderItems",
			Handler:    _SHOPPERSSHOP_VendingMachineService_PayReOrderItems_Handler,
		},
		{
			MethodName: "PayDeleteOrder",
			Handler:    _SHOPPERSSHOP_VendingMachineService_PayDeleteOrder_Handler,
		},
		{
			MethodName: "SessionGetCurrentSession",
			Handler:    _SHOPPERSSHOP_VendingMachineService_SessionGetCurrentSession_Handler,
		},
		{
			MethodName: "SessionLoginUser",
			Handler:    _SHOPPERSSHOP_VendingMachineService_SessionLoginUser_Handler,
		},
		{
			MethodName: "SessionLogoutUser",
			Handler:    _SHOPPERSSHOP_VendingMachineService_SessionLogoutUser_Handler,
		},
		{
			MethodName: "SessionCreateSession",
			Handler:    _SHOPPERSSHOP_VendingMachineService_SessionCreateSession_Handler,
		},
		{
			MethodName: "SessionCreateUser",
			Handler:    _SHOPPERSSHOP_VendingMachineService_SessionCreateUser_Handler,
		},
		{
			MethodName: "SessionGetUserByUserId",
			Handler:    _SHOPPERSSHOP_VendingMachineService_SessionGetUserByUserId_Handler,
		},
		{
			MethodName: "SessionUpdateUser",
			Handler:    _SHOPPERSSHOP_VendingMachineService_SessionUpdateUser_Handler,
		},
		{
			MethodName: "SessionDeleteUser",
			Handler:    _SHOPPERSSHOP_VendingMachineService_SessionDeleteUser_Handler,
		},
		{
			MethodName: "VendGetSessionVend",
			Handler:    _SHOPPERSSHOP_VendingMachineService_VendGetSessionVend_Handler,
		},
		{
			MethodName: "VendGetVendById",
			Handler:    _SHOPPERSSHOP_VendingMachineService_VendGetVendById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vending/vending.proto",
}

func init() { proto.RegisterFile("vending/vending.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xcd, 0x6e, 0xdb, 0xc6,
	0x16, 0xbe, 0x94, 0x64, 0xc7, 0x3a, 0xbe, 0x48, 0x9c, 0x71, 0x6c, 0x33, 0xb4, 0x9d, 0x28, 0x44,
	0x92, 0xeb, 0x1b, 0x5c, 0x48, 0x37, 0x4a, 0xd2, 0xa0, 0x69, 0xba, 0x50, 0x24, 0x35, 0x75, 0xe1,
	0xc6, 0x2a, 0x65, 0x7b, 0xab, 0x8e, 0xa5, 0x89, 0x44, 0x84, 0x22, 0x19, 0xce, 0x28, 0x01, 0x11,
	0x04, 0x41, 0xdb, 0x4d, 0x81, 0x02, 0xdd, 0x74, 0x5d, 0xa0, 0xed, 0xae, 0x7d, 0x84, 0x3e, 0x40,
	0x5f, 0xa0, 0x7d, 0x84, 0xbe, 0x40, 0xf7, 0x5d, 0x14, 0x33, 0x1c, 0xfe, 0x88, 0x12, 0x25, 0xb9,
	0xcd, 0xc6, 0xe2, 0x99, 0x99, 0x73, 0xbe, 0xef, 0x9c, 0xf9, 0xfb, 0xc6, 0xb0, 0xf1, 0x82, 0xd8,
	0x3d, 0xd3, 0xee, 0x57, 0xe4, 0x6f, 0xd9, 0xf5, 0x1c, 0xe6, 0xa0, 0x6d, 0x3a, 0x70, 0x5c, 0x97,
	0x78, 0x94, 0xff, 0x76, 0x64, 0xdf, 0x10, 0x77, 0x07, 0xa6, 0x4d, 0xb4, 0xed, 0xbe, 0xe3, 0xf4,
	0x2d, 0x52, 0x11, 0x43, 0x4f, 0x47, 0x4f, 0x2b, 0x64, 0xe8, 0x32, 0x3f, 0xf0, 0xd4, 0x76, 0x64,
	0x27, 0x76, 0xcd, 0x0a, 0xb6, 0x6d, 0x87, 0x61, 0x66, 0x3a, 0x36, 0x0d, 0x7a, 0xf5, 0x3f, 0x14,
	0xd8, 0xdb, 0xb7, 0x5f, 0x10, 0x9b, 0x39, 0x9e, 0xdf, 0x26, 0xd8, 0xeb, 0x0e, 0x6a, 0x96, 0xb5,
	0xcf, 0xc8, 0xb0, 0x8e, 0x19, 0xe9, 0x3b, 0x9e, 0x49, 0xa8, 0x41, 0xa8, 0xeb, 0xd8, 0x94, 0xa0,
	0x4f, 0x61, 0xc9, 0x64, 0x64, 0x48, 0x55, 0xa5, 0x94, 0xdf, 0x5b, 0xad, 0x7e, 0x54, 0x9e, 0x41,
	0xaa, 0xbc, 0x68, 0xd4, 0x32, 0x6f, 0x36, 0x82, 0xc0, 0x5a, 0x17, 0x0a, 0xdc, 0x44, 0x4d, 0x80,
	0x6e, 0x34, 0x52, 0x55, 0x4a, 0xca, 0xde, 0x6a, 0xf5, 0xc6, 0x4c, 0x38, 0x19, 0xd8, 0x37, 0x12,
	0x8e, 0xe8, 0x12, 0x2c, 0x51, 0xe6, 0x78, 0x44, 0xcd, 0x95, 0x94, 0xbd, 0xa2, 0x11, 0x18, 0xfa,
	0x53, 0xb8, 0x92, 0x22, 0xf7, 0x81, 0xe3, 0x71, 0x58, 0x6a, 0x90, 0xe7, 0x23, 0x42, 0x19, 0xd2,
	0x60, 0x45, 0x46, 0xf1, 0x45, 0xae, 0x45, 0x23, 0xb2, 0x11, 0x82, 0x82, 0x8d, 0x87, 0x3c, 0x24,
	0x6f, 0x17, 0xdf, 0x1c, 0xc7, 0xf5, 0xcc, 0x2e, 0x51, 0xf3, 0x25, 0x65, 0x6f, 0xc9, 0x08, 0x0c,
	0xbd, 0x03, 0x57, 0x33, 0x71, 0x64, 0x45, 0x1f, 0x8e, 0x57, 0xf4, 0xe6, 0x62, 0x15, 0x95, 0xd5,
	0xd2, 0xdb, 0xb0, 0xde, 0xc2, 0xfe, 0x89, 0x49, 0x5e, 0xd6, 0xb1, 0xc7, 0xde, 0x52, 0xd0, 0x1b,
	0x22, 0x68, 0xad, 0xd7, 0x3b, 0x72, 0x82, 0xa8, 0x41, 0x49, 0xce, 0x43, 0xce, 0xec, 0x89, 0x99,
	0x50, 0x8c, 0x9c, 0xd9, 0xd3, 0x07, 0xb0, 0xd1, 0xc2, 0xfe, 0xb1, 0xdb, 0xc3, 0x8c, 0x1c, 0x7a,
	0x3d, 0xe2, 0x85, 0x03, 0xef, 0x41, 0xe1, 0xd4, 0xe9, 0xf9, 0x72, 0xd2, 0xae, 0xcd, 0x04, 0x3f,
	0x21, 0x76, 0xcf, 0x10, 0xc3, 0x91, 0x0a, 0xe7, 0x1c, 0x1e, 0x66, 0xbf, 0x27, 0x27, 0x2b, 0x34,
	0xf5, 0x7b, 0xb0, 0x99, 0x46, 0x92, 0x89, 0x6e, 0x43, 0xb1, 0x8b, 0x2d, 0xab, 0x73, 0x8a, 0xbb,
	0xcf, 0x04, 0x9e, 0x98, 0x27, 0xcb, 0x7a, 0x84, 0xbb, 0xcf, 0xf4, 0xaa, 0x70, 0x33, 0x02, 0x97,
	0xb1, 0xd9, 0x4d, 0x40, 0x29, 0xe3, 0x50, 0xb7, 0x45, 0x52, 0x0d, 0x62, 0x91, 0x54, 0x52, 0xd9,
	0x2e, 0x35, 0x28, 0xb5, 0x09, 0xa5, 0xa6, 0x63, 0x3f, 0x26, 0xac, 0x3e, 0xf2, 0x3c, 0x62, 0x33,
	0xd9, 0x10, 0xf1, 0xdc, 0x05, 0xa0, 0x41, 0x53, 0xc7, 0x0c, 0x03, 0x14, 0x65, 0xcb, 0x7e, 0x4f,
	0xff, 0x04, 0xb6, 0xa4, 0xc7, 0x81, 0xd3, 0x37, 0xed, 0x63, 0x1a, 0xe3, 0x6a, 0xb0, 0xe2, 0x62,
	0x4a, 0x5f, 0x3a, 0x5e, 0xe8, 0x17, 0xd9, 0xbc, 0x6f, 0x44, 0x89, 0x27, 0x17, 0xa3, 0xe8, 0x0b,
	0x6d, 0xfd, 0x3e, 0xec, 0xc8, 0x90, 0x75, 0x8f, 0x60, 0x46, 0xd2, 0x8c, 0xb6, 0xe0, 0x1c, 0x1f,
	0x1b, 0xd3, 0x59, 0xe6, 0xa6, 0xe0, 0xa2, 0x8e, 0x39, 0x26, 0xc9, 0x9c, 0x65, 0x66, 0x85, 0x9f,
	0x18, 0xae, 0xdf, 0x85, 0xcb, 0x53, 0x42, 0xce, 0x23, 0x72, 0x1f, 0x76, 0xe3, 0xba, 0x72, 0x97,
	0x47, 0xfe, 0xb1, 0xe8, 0x09, 0xd9, 0x6c, 0x82, 0x1c, 0x9a, 0x72, 0x34, 0xa3, 0x0c, 0x82, 0x25,
	0xf3, 0xcf, 0x33, 0x48, 0x40, 0xe5, 0xc6, 0xa0, 0xaa, 0x11, 0x54, 0xb0, 0x64, 0x92, 0x50, 0x59,
	0xf4, 0xf6, 0x60, 0x93, 0xaf, 0xfa, 0xc7, 0x84, 0xf1, 0x9f, 0x47, 0x7e, 0x9c, 0x50, 0xbc, 0xc3,
	0x8a, 0x62, 0x87, 0x1d, 0xc2, 0x6a, 0xcd, 0x35, 0xa3, 0x4a, 0x21, 0x28, 0x74, 0x9d, 0x1e, 0x11,
	0x03, 0x96, 0x0c, 0xf1, 0xcd, 0x97, 0xe5, 0x90, 0x50, 0x8a, 0xfb, 0xe1, 0x0a, 0x08, 0x4d, 0x3e,
	0x9a, 0xf9, 0x6e, 0x70, 0x20, 0x15, 0x0d, 0xf1, 0xad, 0x97, 0x61, 0x25, 0x3c, 0x25, 0xd3, 0x60,
	0x89, 0x53, 0x4d, 0x09, 0x4f, 0x35, 0xfd, 0x47, 0x05, 0x8a, 0xd1, 0xf1, 0x10, 0xe0, 0x53, 0x16,
	0xe3, 0x47, 0x94, 0x73, 0x13, 0x51, 0xf2, 0x71, 0x14, 0xb4, 0x03, 0x45, 0x77, 0xe0, 0x30, 0xe7,
	0xd8, 0xb3, 0xa8, 0x5a, 0x10, 0x87, 0x66, 0xdc, 0x80, 0xee, 0x42, 0x81, 0xe1, 0x3e, 0x55, 0x97,
	0xc4, 0x51, 0x55, 0x9a, 0x39, 0x23, 0x47, 0xb8, 0x6f, 0x88, 0xd1, 0x68, 0x0d, 0xf2, 0x23, 0xcf,
	0x52, 0x97, 0x05, 0x0c, 0xff, 0xd4, 0xff, 0x0b, 0xf9, 0x23, 0xdc, 0x5f, 0x28, 0xad, 0xdf, 0x14,
	0x28, 0xf0, 0x99, 0xe2, 0xa7, 0x36, 0x19, 0x62, 0xd3, 0x92, 0xe3, 0x03, 0x83, 0xf3, 0x7d, 0x6a,
	0x7a, 0x94, 0x3d, 0x89, 0xfd, 0xe2, 0x06, 0x09, 0x90, 0x8f, 0x00, 0x34, 0x58, 0xb1, 0xb0, 0x1c,
	0x5c, 0x08, 0x36, 0x61, 0x68, 0x8f, 0x6d, 0xde, 0xa5, 0xd4, 0xe6, 0xe5, 0x37, 0xc6, 0xc0, 0xb1,
	0x89, 0xcc, 0x21, 0x30, 0xd0, 0x15, 0x00, 0xbe, 0x4c, 0xda, 0x0c, 0xb3, 0x11, 0x55, 0xcf, 0x89,
	0x4a, 0x27, 0x5a, 0xc6, 0xb6, 0xfc, 0x4a, 0x6a, 0xcb, 0xff, 0x92, 0x87, 0x02, 0x5f, 0x52, 0x13,
	0x35, 0x88, 0xae, 0x83, 0xdc, 0x02, 0xd7, 0x01, 0x8f, 0x90, 0xbc, 0x91, 0x51, 0x03, 0x96, 0x69,
	0x40, 0x87, 0x27, 0x7d, 0xbe, 0xfa, 0xbf, 0xf9, 0xee, 0xfc, 0x4f, 0x47, 0x30, 0x36, 0xa4, 0x2f,
	0x4f, 0x97, 0x39, 0x0c, 0x5b, 0xa2, 0x46, 0x4b, 0x46, 0x60, 0x68, 0xdf, 0x2b, 0xf2, 0xba, 0xaf,
	0x8d, 0xdd, 0xb7, 0x67, 0xb8, 0xec, 0xe3, 0x6b, 0xf9, 0x01, 0x14, 0x38, 0x61, 0x31, 0x63, 0x8b,
	0xdf, 0x79, 0xc2, 0x87, 0x97, 0xf5, 0xf9, 0x08, 0xdb, 0xcc, 0x64, 0xbe, 0xbc, 0xc1, 0x23, 0x5b,
	0x77, 0x01, 0xe2, 0x7c, 0xd0, 0x06, 0x5c, 0x3c, 0x69, 0x3e, 0x69, 0x74, 0xda, 0x47, 0xb5, 0xa3,
	0xe3, 0x4e, 0xeb, 0xa0, 0x56, 0x6f, 0x36, 0xd6, 0xfe, 0x85, 0xb6, 0x60, 0x3d, 0xd1, 0x5c, 0x6b,
	0xb5, 0x8c, 0xc3, 0x93, 0x66, 0x63, 0x4d, 0x41, 0x2a, 0x5c, 0x4a, 0x74, 0x34, 0x9a, 0x07, 0xfb,
	0x27, 0x4d, 0xa3, 0xd9, 0x58, 0xcb, 0xa5, 0x7a, 0xea, 0xb5, 0x27, 0xf5, 0xe6, 0xc1, 0x41, 0xb3,
	0xb1, 0x96, 0xaf, 0xfe, 0xb9, 0x0e, 0x7a, 0xfb, 0xc3, 0xc3, 0x56, 0xab, 0x69, 0xb4, 0xf9, 0x6f,
	0xe7, 0x24, 0x60, 0xff, 0x71, 0xc0, 0xbe, 0x4d, 0xbc, 0x17, 0x66, 0x97, 0xa0, 0xef, 0x14, 0x28,
	0xcd, 0xd3, 0x58, 0x68, 0xb3, 0x1c, 0xa8, 0xbf, 0x72, 0x28, 0x0d, 0xcb, 0x4d, 0x2e, 0x0d, 0xb5,
	0xe6, 0x5b, 0x91, 0x6e, 0xfa, 0xee, 0xe7, 0xbf, 0xfe, 0xfe, 0x4d, 0x6e, 0x0b, 0x6d, 0x54, 0x22,
	0xd5, 0x7a, 0xbb, 0x62, 0x46, 0x47, 0xc6, 0xcf, 0x0a, 0x6c, 0x65, 0x28, 0x20, 0xf4, 0xde, 0x59,
	0x18, 0xa4, 0xf4, 0x99, 0xf6, 0xf0, 0xef, 0x39, 0x4b, 0xd6, 0xd7, 0x05, 0xeb, 0x2b, 0x68, 0x67,
	0x2a, 0xeb, 0x0a, 0x15, 0x5e, 0xc8, 0x87, 0xd5, 0x84, 0xb8, 0xca, 0xac, 0xe4, 0xff, 0x67, 0x52,
	0x99, 0x22, 0xcf, 0xf4, 0x92, 0x80, 0xd7, 0x90, 0x9a, 0x84, 0x77, 0xb1, 0x5f, 0x71, 0x47, 0x5e,
	0x77, 0x80, 0x29, 0x41, 0x5d, 0xb8, 0xd0, 0xc2, 0x7e, 0x4b, 0x9a, 0x33, 0xe1, 0x33, 0xda, 0x43,
	0x10, 0x3d, 0x1b, 0xe4, 0x0d, 0xfc, 0x3b, 0xa9, 0xf3, 0xd0, 0xdc, 0x44, 0xd2, 0x92, 0x30, 0x13,
	0xfb, 0x86, 0xc0, 0xbe, 0xaa, 0xed, 0x66, 0x61, 0x57, 0x5e, 0x99, 0xbd, 0xd7, 0xe8, 0x07, 0x05,
	0xce, 0x8f, 0x0b, 0x3b, 0x54, 0x9d, 0xc7, 0x61, 0x52, 0x6f, 0x6a, 0x77, 0xce, 0xe4, 0x23, 0xe7,
	0xe0, 0x3f, 0x82, 0xe2, 0x35, 0xed, 0x72, 0x9a, 0xe2, 0x2b, 0xa9, 0xeb, 0x5e, 0x3f, 0x08, 0xae,
	0xfe, 0xcf, 0x14, 0x31, 0x17, 0x49, 0x19, 0x89, 0xe6, 0x22, 0x4e, 0x11, 0x9d, 0x99, 0xc5, 0xba,
	0x26, 0x98, 0x6c, 0xeb, 0xd9, 0x4c, 0xd0, 0x1b, 0x51, 0xa7, 0x84, 0x2a, 0x9d, 0x5f, 0xa7, 0x49,
	0x09, 0x3b, 0x8f, 0xc0, 0xad, 0x19, 0x04, 0xbe, 0x56, 0x22, 0xa1, 0x33, 0x21, 0x72, 0x33, 0x57,
	0xe6, 0xfb, 0x33, 0x39, 0xce, 0xd3, 0xcc, 0xfa, 0xb6, 0xa0, 0xb5, 0x81, 0xd6, 0x93, 0xb4, 0xa4,
	0x66, 0x46, 0x5f, 0x28, 0xb0, 0x96, 0x96, 0xcc, 0xe8, 0xee, 0x22, 0x80, 0x69, 0x85, 0x3d, 0xaf,
	0x2c, 0xe8, 0xf2, 0x14, 0xfc, 0x8a, 0xc5, 0xa3, 0xa0, 0x3e, 0x5c, 0x8c, 0xa3, 0x3a, 0x23, 0xa1,
	0x52, 0xcf, 0xbc, 0x51, 0x75, 0x81, 0xb3, 0xa3, 0x6b, 0x19, 0x38, 0xce, 0x88, 0xa1, 0xaf, 0x14,
	0xb8, 0x34, 0x4d, 0xce, 0x67, 0x82, 0xbd, 0xbb, 0x48, 0x29, 0xa6, 0xbe, 0x0c, 0xc2, 0x83, 0x43,
	0x53, 0xa7, 0xf1, 0xe1, 0x62, 0x03, 0xfd, 0xa4, 0x44, 0x79, 0xc7, 0x82, 0x1e, 0xdd, 0x5b, 0x1c,
	0x32, 0x59, 0xfe, 0x77, 0xce, 0xea, 0x26, 0x69, 0xde, 0x14, 0x34, 0x4b, 0x7a, 0x26, 0x4d, 0xb9,
	0x7f, 0xbf, 0x55, 0x60, 0x73, 0xfa, 0x3b, 0x02, 0x3d, 0x58, 0x70, 0x81, 0x4e, 0x79, 0x7c, 0x68,
	0xf3, 0x9f, 0x0e, 0xd3, 0x6f, 0x99, 0x90, 0xe1, 0xab, 0xe0, 0x35, 0x20, 0xb6, 0xd6, 0xc5, 0x89,
	0xe7, 0xca, 0x62, 0xc5, 0x9c, 0x78, 0xde, 0x64, 0xae, 0xb1, 0x5b, 0x82, 0xca, 0x75, 0x6d, 0x26,
	0x15, 0x59, 0xb0, 0x2f, 0x63, 0x42, 0xf1, 0xa3, 0x66, 0x31, 0x42, 0x13, 0x8f, 0xa0, 0x4c, 0x42,
	0xb2, 0x36, 0xb7, 0x66, 0xd7, 0xc6, 0x04, 0x24, 0x9f, 0x4a, 0x12, 0x40, 0xc8, 0xdb, 0xac, 0x35,
	0x3f, 0xff, 0x3f, 0x0d, 0xba, 0x2a, 0x60, 0x11, 0x5a, 0x4b, 0xc2, 0xf2, 0x4f, 0x9e, 0xf5, 0x85,
	0xd4, 0xb3, 0x6c, 0xce, 0x31, 0x3f, 0xfd, 0x11, 0xb7, 0x08, 0x8b, 0xa9, 0xa2, 0x89, 0x7f, 0x8a,
	0x6b, 0xf1, 0x74, 0x59, 0xe4, 0x75, 0xe7, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x68, 0x12, 0xa9,
	0xdd, 0x09, 0x14, 0x00, 0x00,
}
